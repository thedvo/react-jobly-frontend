{"version":3,"sources":["api.js","UserContext.js","routes-nav/Nav.js","Home.js","forms/SearchForm.js","companies/CompanyCard.js","companies/CompanyList.js","jobs/JobCard.js","jobs/JobCardList.js","companies/CompanyDetail.js","jobs/JobList.js","forms/LoginForm.js","forms/SignUpForm.js","forms/UserEditForm.js","routes-nav/NotFound.js","routes-nav/ProtectedRoute.js","routes-nav/Routes.js","hooks/useLocalStorage.js","App.js","serviceWorker.js","index.js"],"names":["JoblyApi","endpoint","data","method","console","log","url","process","headers","Authorization","concat","token","params","axios","error","_context","t0","response","message","Array","isArray","username","this","request","res","user","name","companies","handle","company","title","jobs","id","UserContext","React","createContext","Nav","_ref","logout","currentUser","useContext","debug","react_default","a","createElement","className","class","react_router_dom","exact","to","onClick","firstName","ul","Home","SearchForm","makeSearch","_useState","useState","_useState2","Object","slicedToArray","formData","setFormData","reactstrap_module","onSubmit","e","preventDefault","trim","style","display","htmlFor","type","height","placeholder","onChange","target","value","autoComplete","color","CompanyCard","description","logoUrl","CompanyList","setCompanies","_useState3","_useState4","isLoading","setIsLoading","_x","_makeSearch","apply","arguments","asyncToGenerator","CompanyList_regeneratorRuntime","mark","_callee","wrap","prev","next","JoblyAPI","getCompanies","sent","stop","useEffect","forms_SearchForm","length","map","c","src_companies_CompanyCard","key","JobCard","salary","equity","companyName","_useContext","hasAppliedToJob","applyToJob","applied","setApplied","_handleApply","JobCard_regeneratorRuntime","abrupt","toUpperCase","digitsRev","salaryStr","toString","i","push","reverse","join","formatSalary","undefined","disabled","JobCardList","job","src_jobs_JobCard","CompanyDetail","useParams","setCompany","_getCompany","CompanyDetail_regeneratorRuntime","getCompany","jobs_JobCardList","JobList","setJobs","JobList_regeneratorRuntime","getJobs","LoginForm","login","password","formErrors","setFormErrors","history","useHistory","handleChange","_e$target","objectSpread","defineProperty","_handleSubmit","LoginForm_regeneratorRuntime","success","errors","required","SignUpForm","signup","lastName","email","SignUpForm_regeneratorRuntime","UserEditForm","setCurrentUser","INITIAL_STATE","UserEditForm_regeneratorRuntime","profileData","updatedUser","saveProfile","NotFound","ProtectedRoute","path","children","react_router","Routes","register","src_Home_0","routes_nav_ProtectedRoute","companies_CompanyList","companies_CompanyDetail","jobs_JobList","forms_LoginForm","forms_SignUpForm","forms_UserEditForm","routes_nav_NotFound","useLocalStorage","defaultValue","localStorage","getItem","item","setItem","removeItem","TOKEN_STORAGE_ID","App","_useLocalStorage","_useLocalStorage2","setToken","_useState5","Set","_useState6","applicationIds","setApplicationIds","_signup","App_regeneratorRuntime","_callee2","_token","_context2","err","_login","_callee3","_token2","_context3","_logout","_callee4","_context4","_getCurrentUser","_jwt$decode","_currentUser","jwt","decode","getCurrentUser","applications","has","src_UserContext","Provider","toConsumableArray","routes_nav_Nav","routes_nav_Routes","_x2","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.79c5a5a9.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || 'http://localhost:3001';\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass JoblyApi {\n\t// the token for interactive with the API will be stored here.\n\tstatic token;\n\n\tstatic async request(endpoint, data = {}, method = 'get') {\n\t\tconsole.log('API Call:', endpoint, data, method);\n\n\t\t//there are multiple ways to pass an authorization token, this is how you pass it in the header.\n\t\t//this has been provided to show you another way to pass the token. you are only expected to read this code for this project.\n\t\tconst url = `${BASE_URL}/${endpoint}`;\n\t\tconst headers = { Authorization: `Bearer ${JoblyApi.token}` };\n\t\tconst params = method === 'get' ? data : {};\n\n\t\ttry {\n\t\t\treturn (await axios({ url, method, data, params, headers })).data;\n\t\t} catch (err) {\n\t\t\tconsole.error('API Error:', err.response);\n\t\t\tlet message = err.response.data.error.message;\n\t\t\tthrow Array.isArray(message) ? message : [message];\n\t\t}\n\t}\n\n\t// Individual API routes\n\n\t/** Get the current user. */\n\tstatic async getCurrentUser(username) {\n\t\tlet res = await this.request(`users/${username}`);\n\t\treturn res.user;\n\t}\n\n\t/** Get list of all companies */\n\tstatic async getCompanies(name) {\n\t\tlet res = await this.request('companies', { name });\n\t\treturn res.companies;\n\t}\n\n\t/** Get details on a company by handle. */\n\tstatic async getCompany(handle) {\n\t\tlet res = await this.request(`companies/${handle}`);\n\t\treturn res.company;\n\t}\n\n\t/** Get list of all jobs */\n\tstatic async getJobs(title) {\n\t\tlet res = await this.request('jobs', { title });\n\t\treturn res.jobs;\n\t}\n\n\t// Get token for login from (username, password)\n\tstatic async login(data) {\n\t\tlet res = await this.request('auth/token', data, 'post');\n\t\treturn res.token;\n\t}\n\n\t// Signup for account\n\tstatic async signup(data) {\n\t\tlet res = await this.request('auth/register', data, 'post');\n\t\treturn res.token;\n\t}\n\n\t// Save user profile page once updates are made\n\tstatic async saveProfile(username, data) {\n\t\tlet res = await this.request(`users/${username}`, data, 'patch');\n\t\treturn res.user;\n\t}\n\n\t// Apply to a job\n\t// endpoint found on users.js (backend)\n\tstatic async applyToJob(username, id) {\n\t\tawait this.request(`users/${username}/jobs/${id}`, {}, 'post');\n\t}\n}\n\nexport default JoblyApi;\n\n// for now, put token (\"testuser\" / \"password\" on class)\n// JoblyApi.token =\n// \t'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZ' +\n// \t'SI6InRlc3R1c2VyIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTU5ODE1OTI1OX0.' +\n// \t'FtrMwBQwe6Ue-glIFgz_Nf8XxRT2YecFCiSpYL0fCXc';\n","import React from 'react';\n\nconst UserContext = React.createContext();\n\nexport default UserContext;\n","import React, { useContext } from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport UserContext from '../UserContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Nav.css';\n\nfunction Nav({ logout }) {\n\tconst { currentUser } = useContext(UserContext);\n\n\tconsole.debug('Navigation', 'currentUser=', currentUser);\n\n\tfunction loggedInNav() {\n\t\treturn (\n\t\t\t<ul className=\"navbar-nav ms-auto\">\n\t\t\t\t<li className=\"nav-item me-4\">\n\t\t\t\t\t<NavLink className=\"nav-link\" exact to=\"/companies\">\n\t\t\t\t\t\tCompanies\n\t\t\t\t\t</NavLink>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"nav-item me-4\">\n\t\t\t\t\t<NavLink className=\"nav-link\" exact to=\"/jobs\">\n\t\t\t\t\t\tJobs\n\t\t\t\t\t</NavLink>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"nav-item me-4\">\n\t\t\t\t\t<NavLink className=\"nav-link\" exact to=\"/profile\">\n\t\t\t\t\t\tProfile\n\t\t\t\t\t</NavLink>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<Link className=\"nav-link\" to=\"/\" onClick={logout}>\n\t\t\t\t\t\tLogout {currentUser.firstName || currentUser.username}\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t);\n\t}\n\n\tfunction loggedOutNav() {\n\t\treturn (\n\t\t\t<ul ul className=\"navbar-nav ms-auto\">\n\t\t\t\t<li className=\"nav-item mr-4\">\n\t\t\t\t\t<NavLink className=\"nav-link\" exact to=\"/login\">\n\t\t\t\t\t\tLogin\n\t\t\t\t\t</NavLink>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"nav-item me-4\">\n\t\t\t\t\t<NavLink className=\"nav-link\" exact to=\"/signup\">\n\t\t\t\t\t\tSign Up\n\t\t\t\t\t</NavLink>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t);\n\t}\n\n\treturn (\n\t\t<nav className=\"Navigation navbar navbar-expand-lg mb-4\">\n\t\t\t<div class=\"container-fluid\">\n\t\t\t\t<NavLink className=\"navbar-brand\" exact to=\"/\">\n\t\t\t\t\tJobly\n\t\t\t\t</NavLink>\n\t\t\t\t{currentUser ? loggedInNav() : loggedOutNav()}\n\t\t\t</div>\n\t\t</nav>\n\t);\n}\n\nexport default Nav;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport UserContext from './UserContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Home.css';\n\nconst Home = () => {\n\tconst { currentUser } = useContext(UserContext);\n\tconsole.debug('Homepage', 'currentUser=', currentUser);\n\n\treturn (\n\t\t<div className=\"Home\">\n\t\t\t<div className=\"container text-center\">\n\t\t\t\t<h1 className=\"mb-4 fw-bold\">Jobly</h1>\n\t\t\t\t<p className=\"lead\">All the jobs in one, convenient place. </p>\n\t\t\t\t{currentUser ? (\n\t\t\t\t\t<h3>\n\t\t\t\t\t\tWelcome Back, {currentUser.firstName || currentUser.username}!\n\t\t\t\t\t</h3>\n\t\t\t\t) : (\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<Link to=\"/login\" className=\"btn btn-primary fw-bold me-3\">\n\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<Link to=\"/signup\" className=\"btn btn-primary fw-bold\">\n\t\t\t\t\t\t\tSignup\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</p>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Home;\n","import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Form, Label, Input, Button } from 'reactstrap';\n\nconst SearchForm = ({ makeSearch }) => {\n\tconst [formData, setFormData] = useState('');\n\n\tconst handleChange = (e) => {\n\t\tsetFormData(e.target.value);\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tmakeSearch(formData.trim());\n\t};\n\n\treturn (\n\t\t<div className=\"SearchForm mb-4\">\n\t\t\t<Form onSubmit={handleSubmit} style={{ display: 'flex' }}>\n\t\t\t\t<Label htmlFor=\"name\"></Label>\n\t\t\t\t<Input\n\t\t\t\t\tid=\"name\"\n\t\t\t\t\tname=\"name\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tstyle={{ height: '3em' }}\n\t\t\t\t\tplaceholder=\"Enter search term...\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalue={formData}\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t/>\n\t\t\t\t<Button className=\"btn btn-lg\" color=\"primary\">\n\t\t\t\t\tSubmit\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t</div>\n\t);\n};\n\nexport default SearchForm;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './CompanyCard.css';\n\n/*\nCard displays (name, description)\n*/\n\nconst CompanyCard = ({ handle, name, description, logoUrl }) => {\n\treturn (\n\t\t<Link className=\"CompanyCard card\" to={`/companies/${handle}`}>\n\t\t\t<div className=\"card-body\">\n\t\t\t\t<h5 className=\"card-title\">{name}</h5>\n\t\t\t\t<p>{description}</p>\n\t\t\t</div>\n\t\t</Link>\n\t);\n};\n\nexport default CompanyCard;\n","import React, { useState, useEffect } from 'react';\n\nimport JoblyAPI from '../api';\nimport SearchForm from '../forms/SearchForm';\nimport CompanyCard from './CompanyCard';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst CompanyList = () => {\n\tconst [companies, setCompanies] = useState(null);\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\t// on mount, run makeSearch() to set the companies list\n\tuseEffect(function getCompaniesOnMount() {\n\t\tmakeSearch();\n\t}, []);\n\n\tasync function makeSearch(name) {\n\t\tlet companies = await JoblyAPI.getCompanies(name);\n\t\tsetCompanies(companies);\n\t\tsetIsLoading(false);\n\t}\n\n\t// will show 'Loading...' as API request is finishing\n\tif (isLoading) {\n\t\treturn (\n\t\t\t<p className=\"Loading fw-bold text-info fs-1 text-center mt-4\">\n\t\t\t\tLoading &hellip;\n\t\t\t</p>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className=\"CompanyList col-md-8 offset-md-2\">\n\t\t\t<SearchForm makeSearch={makeSearch} />\n\n\t\t\t{/* map out individual company components */}\n\t\t\t{companies.length ? (\n\t\t\t\t<div className=\"CompanyList-list\">\n\t\t\t\t\t{companies.map((c) => (\n\t\t\t\t\t\t<CompanyCard\n\t\t\t\t\t\t\tkey={c.handle}\n\t\t\t\t\t\t\thandle={c.handle}\n\t\t\t\t\t\t\tname={c.name}\n\t\t\t\t\t\t\tdescription={c.description}\n\t\t\t\t\t\t\tlogoUrl={c.logoUrl}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<p className=\"lead\">Sorry, no results found.</p>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default CompanyList;\n","import React, { useContext, useState, useEffect } from 'react';\nimport UserContext from '../UserContext';\nimport './JobCard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n/* \nCard contains (title, salary, equity)\n*/\n\nconst JobCard = ({ id, title, salary, equity, companyName }) => {\n\tconst { hasAppliedToJob, applyToJob } = useContext(UserContext);\n\tconst [applied, setApplied] = useState();\n\n\tuseEffect(\n\t\tfunction updateAppliedStatus() {\n\t\t\tsetApplied(hasAppliedToJob(id));\n\t\t},\n\t\t[id, hasAppliedToJob]\n\t);\n\n\t// Apply for the job\n\tasync function handleApply(e) {\n\t\t// check if the job has already been applied to. If yes, return.\n\t\tif (hasAppliedToJob(id)) return;\n\n\t\t// Otherwise, continue to run applyToJob() which will make the API call\n\t\tapplyToJob(id);\n\t\tsetApplied(true);\n\t\tconsole.log('Success! You have applied.');\n\t}\n\n\treturn (\n\t\t<div className=\"JobCard card\">\n\t\t\t{applied}\n\t\t\t<div className=\"card-body\">\n\t\t\t\t<h6 className=\"card-title\">{title.toUpperCase()}</h6>\n\t\t\t\t<p>{companyName}</p>\n\t\t\t\t{salary && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<small>Salary: {formatSalary(salary)}</small>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{equity !== undefined && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<small>Equity: {equity}</small>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<button\n\t\t\t\t\tonClick={handleApply}\n\t\t\t\t\tdisabled={applied}\n\t\t\t\t\tclassName=\"btn btn-danger fw-bold text-uppercase float-end\"\n\t\t\t\t>\n\t\t\t\t\t{applied ? 'Applied' : 'Apply'}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\n/** Render integer salary like '$1,250,343' */\n\nfunction formatSalary(salary) {\n\tconst digitsRev = [];\n\tconst salaryStr = salary.toString();\n\n\tfor (let i = salaryStr.length - 1; i >= 0; i--) {\n\t\tdigitsRev.push(salaryStr[i]);\n\t\tif (i > 0 && i % 3 === 0) digitsRev.push(',');\n\t}\n\n\treturn digitsRev.reverse().join('');\n}\n\nexport default JobCard;\n","import React from 'react';\nimport JobCard from './JobCard';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// this component maps out the jobs into a list of cards\nconst JobCardList = ({ jobs }) => {\n\tconsole.log('JobCardList', 'jobs=', jobs);\n\n\treturn (\n\t\t<div className=\"JobCardList\">\n\t\t\t{jobs.map((job) => (\n\t\t\t\t<JobCard\n\t\t\t\t\tkey={job.id}\n\t\t\t\t\tid={job.id}\n\t\t\t\t\ttitle={job.title}\n\t\t\t\t\tcompanyName={job.companyName}\n\t\t\t\t\tsalary={job.salary}\n\t\t\t\t\tequity={job.equity}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default JobCardList;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport JoblyAPI from '../api';\nimport JobCardList from '../jobs/JobCardList';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst CompanyDetail = () => {\n\tconst { handle } = useParams();\n\tconsole.log('CompanyDetail', 'handle=', handle);\n\tconst [company, setCompany] = useState(null);\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\tuseEffect(() => {\n\t\tasync function getCompany() {\n\t\t\tlet company = await JoblyAPI.getCompany(handle);\n\n\t\t\tsetCompany(company);\n\t\t\tsetIsLoading(false);\n\t\t}\n\t\tgetCompany();\n\t}, [handle]);\n\n\tif (isLoading) {\n\t\treturn (\n\t\t\t<p className=\"Loading fw-bold text-info fs-1 text-center mt-4\">\n\t\t\t\tLoading &hellip;\n\t\t\t</p>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className=\"CompanyDetail col-md-8 offset-md-2 mt-4\">\n\t\t\t<h4>{company.name}</h4>\n\t\t\t<p>{company.description}</p>\n\n\t\t\t<div>\n\t\t\t\t{/* render component which will show the jobs for this specific company */}\n\t\t\t\t<JobCardList jobs={company.jobs} />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default CompanyDetail;\n","import React, { useState, useEffect } from 'react';\n\nimport JoblyApi from '../api';\nimport SearchForm from '../forms/SearchForm';\nimport JobCardList from './JobCardList';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n/*\nMaps through Jobs and for each individual job, render a JobCard component.\n*/\n\nconst JobList = () => {\n\tconst [jobs, setJobs] = useState(null);\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\t// on mount, make a request to get all jobs\n\tuseEffect(function getJobsOnMount() {\n\t\tmakeSearch();\n\t}, []);\n\n\t// function which will be passed as prop to SearchForm component.\n\t// will be used to update job state\n\tasync function makeSearch(title) {\n\t\tlet jobs = await JoblyApi.getJobs(title);\n\t\tsetJobs(jobs);\n\t\tsetIsLoading(false);\n\t}\n\n\tif (isLoading) {\n\t\treturn (\n\t\t\t<p className=\"Loading fw-bold text-info fs-1 text-center mt-4\">\n\t\t\t\tLoading &hellip;\n\t\t\t</p>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className=\"JobList col-md-8 offset-md-2\">\n\t\t\t<SearchForm makeSearch={makeSearch} />\n\t\t\t{jobs.length ? (\n\t\t\t\t<JobCardList jobs={jobs} />\n\t\t\t) : (\n\t\t\t\t<p className=\"lead\">Sorry, no results were found!</p>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default JobList;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst LoginForm = ({ login }) => {\n\tconst INITIAL_STATE = {\n\t\tusername: 'danvo',\n\t\tpassword: 'hello',\n\t};\n\n\tconst [formData, setFormData] = useState(INITIAL_STATE);\n\tconst [formErrors, setFormErrors] = useState([]);\n\tconst history = useHistory();\n\n\tconsole.debug(\n\t\t'LoginForm',\n\t\t'login=',\n\t\ttypeof login,\n\t\t'formData=',\n\t\tformData,\n\t\t'formErrors',\n\t\tformErrors\n\t);\n\n\tconst handleChange = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetFormData((formData) => ({ ...formData, [name]: value }));\n\t};\n\n\tasync function handleSubmit(e) {\n\t\te.preventDefault();\n\t\tlet res = await login(formData);\n\t\tif (res.success) {\n\t\t\thistory.push('/companies');\n\t\t} else {\n\t\t\tsetFormErrors(res.errors);\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"LoginForm\">\n\t\t\t<div className=\"container col-md-6 offset-md-3 col-lg-4 offset-lg-4 mt-4\">\n\t\t\t\t<h2 className=\"mb-3\">Log In</h2>\n\t\t\t\t<div className=\"card\">\n\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t\t\t\t<label className=\"form-label fw-bold\" htmlFor=\"name\">\n\t\t\t\t\t\t\t\t\tUsername\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tvalue={formData.username}\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t\t\t\t<label className=\"form-label fw-bold\" htmlFor=\"password\">\n\t\t\t\t\t\t\t\t\tPassword\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tvalue={formData.password}\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button className=\"btn btn-primary float-end\">Submit</button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default LoginForm;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst SignUpForm = ({ signup }) => {\n\tconst INITIAL_STATE = {\n\t\tusername: '',\n\t\tpassword: 'hello',\n\t\tfirstName: 'dan',\n\t\tlastName: 'vo',\n\t\temail: 'dan@gmail.com',\n\t};\n\n\tconst [formData, setFormData] = useState(INITIAL_STATE);\n\tconst [formErrors, setFormErrors] = useState([]);\n\tconst history = useHistory();\n\n\tconsole.debug(\n\t\t'SignupForm',\n\t\t'signup=',\n\t\ttypeof signup,\n\t\t'formData=',\n\t\tformData,\n\t\t'formErrors=',\n\t\tformErrors\n\t);\n\n\tconst handleChange = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetFormData((formData) => ({ ...formData, [name]: value }));\n\t};\n\n\tasync function handleSubmit(e) {\n\t\te.preventDefault();\n\t\tlet res = await signup(formData);\n\t\tif (res.success) {\n\t\t\thistory.push('/companies');\n\t\t} else {\n\t\t\tsetFormErrors(res.errors);\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"SignupForm\">\n\t\t\t<div className=\"container col-md-6 offset-md-3 col-lg-4 offset-lg-4 mt-4\">\n\t\t\t\t<h2 className=\"mb-3\">Sign Up</h2>\n\t\t\t\t<div className=\"card\">\n\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t\t\t\t<label className=\"form-label fw-bold\" htmlFor=\"username\">\n\t\t\t\t\t\t\t\t\tUsername\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tvalue={formData.username}\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t\t\t\t<label className=\"form-label fw-bold\" htmlFor=\"password\">\n\t\t\t\t\t\t\t\t\tPassword\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tvalue={formData.password}\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t\t\t\t<label className=\"form-label fw-bold\" htmlFor=\"firstName\">\n\t\t\t\t\t\t\t\t\tFirst Name\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tid=\"firstName\"\n\t\t\t\t\t\t\t\t\tname=\"firstName\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tvalue={formData.firstName}\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t\t\t\t<label className=\"form-label fw-bold\" htmlFor=\"lastName\">\n\t\t\t\t\t\t\t\t\tLast Name\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tid=\"lastName\"\n\t\t\t\t\t\t\t\t\tname=\"lastName\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tvalue={formData.lastName}\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t\t\t\t<label className=\"form-label fw-bold\" htmlFor=\"email\">\n\t\t\t\t\t\t\t\t\tEmail\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tvalue={formData.email}\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button className=\"btn btn-primary float-end\">Submit</button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default SignUpForm;\n","import React, { useState, useContext } from 'react';\nimport UserContext from '../UserContext';\nimport JoblyApi from '../api';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n/**  \n Form to Edit Profile for a logged in user.\n\n \t- Displays a form with inputs to change details of a user's profile (firstName, lastName, email). \n \n \t- Includes a password input to confirm changes. \n\n*/\nconst UserEditForm = () => {\n\tconst { currentUser, setCurrentUser } = useContext(UserContext);\n\t// import currentUser so that we can use the logged in user's info as the default placeholders for the form.\n\t// import setCurrentUser to update currentUser once the form is submitted\n\n\tconst INITIAL_STATE = {\n\t\tfirstName: currentUser.firstName,\n\t\tlastName: currentUser.lastName,\n\t\temail: currentUser.email,\n\t\tusername: currentUser.username,\n\t\tpassword: '',\n\t\t// leave password empty because the user will enter it themselves to confirm changes at submission\n\t};\n\n\tconst [formData, setFormData] = useState(INITIAL_STATE);\n\tconst [formErrors, setFormErrors] = useState([]);\n\n\tconsole.debug(\n\t\t'ProfileForm',\n\t\t'currentUser=',\n\t\tcurrentUser,\n\t\t'formData=',\n\t\tformData,\n\t\t'formErrors=',\n\t\tformErrors\n\t);\n\n\tfunction handleChange(e) {\n\t\tconst { name, value } = e.target;\n\n\t\tsetFormData((formData) => ({\n\t\t\t...formData,\n\t\t\t[name]: value,\n\t\t}));\n\t\tsetFormErrors([]);\n\t\t// empties formErrors since use is making new input\n\t}\n\n\tasync function handleSubmit(e) {\n\t\te.preventDefault();\n\n\t\t// create separate variables for profile form data and username so that we can pass it to the API request (saveProfile)\n\t\tlet profileData = {\n\t\t\tfirstName: formData.firstName,\n\t\t\tlastName: formData.lastName,\n\t\t\temail: formData.email,\n\t\t\tpassword: formData.password,\n\t\t};\n\n\t\tlet username = formData.username;\n\t\tlet updatedUser;\n\n\t\ttry {\n\t\t\tupdatedUser = await JoblyApi.saveProfile(username, profileData);\n\t\t} catch (err) {\n\t\t\tsetFormErrors(err);\n\t\t\tconsole.log('action failed. try again!');\n\t\t\treturn;\n\t\t}\n\n\t\t// sets formData to the new updated user information\n\t\t// sets formErrors to empty array to reset\n\t\t// set currentUser to be the updated user\n\t\tsetFormData((formData) => ({ ...formData, password: '' }));\n\t\tsetFormErrors([]);\n\t\tsetCurrentUser(updatedUser);\n\t\tconsole.log('SUCCESS!', updatedUser);\n\t}\n\n\treturn (\n\t\t<div className=\"col-mb-6 col-lg-4 offset-md-3 offset-lg-4 mt-4\">\n\t\t\t<h2>Profile</h2>\n\t\t\t<div className=\"card\">\n\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t\t\t<label className=\"form-label fw-bold\">Username</label>\n\t\t\t\t\t\t\t<p className=\"form-control-plaintext\">@{formData.username}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t\t\t<label className=\"form-label fw-bold\" htmlFor=\"firstName\">\n\t\t\t\t\t\t\t\tFirst Name\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tname=\"firstName\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tvalue={formData.firstName}\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t\t\t<label className=\"form-label fw-bold\" htmlFor=\"lastName\">\n\t\t\t\t\t\t\t\tLast Name\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tname=\"lastName\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tvalue={formData.lastName}\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t\t\t<label className=\"form-label fw-bold\" htmlFor=\"email\">\n\t\t\t\t\t\t\t\tEmail\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tvalue={formData.email}\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"mb-1\">\n\t\t\t\t\t\t\t<label className=\"form-label fw-bold\" htmlFor=\"password\">\n\t\t\t\t\t\t\t\tConfirm password to make changes:{' '}\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tvalue={formData.password}\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"d-grid gap-2\">\n\t\t\t\t\t\t\t<button className=\"btn btn-primary mt-4\">Save Changes</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default UserEditForm;\n","import React from 'react';\n\nconst NotFound = () => {\n\treturn (\n\t\t<div>\n\t\t\t<p>Sorry! The page you are looking for does not exist.</p>\n\t\t</div>\n\t);\n};\n\nexport default NotFound;\n","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport UserContext from '../UserContext';\n\n// this will be used instead of <Route></Route> for some routes depending on if they need authentication. If a user is not logged in, they will be re-routed if they try to access these specified routes.\n\nconst ProtectedRoute = ({ exact, path, children }) => {\n\tconst { currentUser } = useContext(UserContext);\n\n\tconsole.debug(\n\t\t'PrivateRoute',\n\t\t'exact=',\n\t\texact,\n\t\t'path=',\n\t\tpath,\n\t\t'currentUser=',\n\t\tcurrentUser\n\t);\n\n\tif (!currentUser) {\n\t\treturn <Redirect to=\"/login\" />;\n\t}\n\n\treturn (\n\t\t<Route exact={exact} path={path}>\n\t\t\t{children}\n\t\t</Route>\n\t);\n};\n\nexport default ProtectedRoute;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\n// import components from other files so routes can render\nimport Home from '../Home';\nimport CompanyList from '../companies/CompanyList';\nimport CompanyDetail from '../companies/CompanyDetail';\nimport JobList from '../jobs/JobList';\nimport LoginForm from '../forms/LoginForm';\nimport SignUpForm from '../forms/SignUpForm';\nimport UserEditForm from '../forms/UserEditForm';\nimport NotFound from '../routes-nav/NotFound';\nimport ProtectedRoute from '../routes-nav/ProtectedRoute';\n\nconst Routes = ({ login, signup }) => {\n\tconsole.debug(\n\t\t'Routes',\n\t\t`login=${typeof login}`,\n\t\t`register=${typeof register}`\n\t);\n\n\treturn (\n\t\t<Switch>\n\t\t\t{/* Home */}\n\t\t\t<Route exact path=\"/\">\n\t\t\t\t<Home />\n\t\t\t</Route>\n\n\t\t\t{/* Shows list of Companies */}\n\t\t\t<ProtectedRoute exact path=\"/companies\">\n\t\t\t\t<CompanyList />\n\t\t\t</ProtectedRoute>\n\n\t\t\t{/* Individual Company */}\n\t\t\t<ProtectedRoute path=\"/companies/:handle\">\n\t\t\t\t<CompanyDetail />\n\t\t\t</ProtectedRoute>\n\n\t\t\t{/* Shows list of Jobs */}\n\t\t\t<ProtectedRoute exact path=\"/jobs\">\n\t\t\t\t<JobList />\n\t\t\t</ProtectedRoute>\n\n\t\t\t{/* Displays User Login Form */}\n\t\t\t<Route exact path=\"/login\">\n\t\t\t\t<LoginForm login={login} />\n\t\t\t</Route>\n\n\t\t\t{/* Displays Sign Up Form */}\n\t\t\t<Route exact path=\"/signup\">\n\t\t\t\t<SignUpForm signup={signup} />\n\t\t\t</Route>\n\n\t\t\t{/* Displays Edit Profile Form */}\n\t\t\t<ProtectedRoute exact path=\"/profile\">\n\t\t\t\t<UserEditForm />\n\t\t\t</ProtectedRoute>\n\n\t\t\t{/* Invalid URL leads user to error page */}\n\t\t\t<Route>\n\t\t\t\t<NotFound />\n\t\t\t</Route>\n\t\t</Switch>\n\t);\n};\n\nexport default Routes;\n","import { useState, useEffect } from 'react';\n\n/** \n Custom hook for keeping state data synced with localStorage.\n\nwhen the item (in this case, we'll be saving the Token in localStorage. Can think of 'item' as token.) is changed, the useEffect runs.\n    --> if the value of the item is null (meaning user logged out), it is removed from localStorage\n\n    --> otherwise, if the item has value, update (setItem) localStorage with the (key, item)\n\n */\nconst useLocalStorage = (key, defaultValue = null) => {\n\tconst INITIAL_STATE = localStorage.getItem(key) || defaultValue;\n\tconst [item, setItem] = useState(INITIAL_STATE);\n\n\tuseEffect(\n\t\tfunction setKeyInLocalStorage() {\n\t\t\tconsole.debug('hooks useLocalStorage useEffect', 'item=', item);\n\n\t\t\tif (item === null) {\n\t\t\t\tlocalStorage.removeItem(key);\n\t\t\t} else {\n\t\t\t\tlocalStorage.setItem(key, item);\n\t\t\t}\n\t\t},\n\t\t[key, item]\n\t);\n\n\treturn [item, setItem];\n};\n\nexport default useLocalStorage;\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\n\nimport JoblyApi from './api';\nimport Nav from './routes-nav/Nav';\nimport Routes from './routes-nav/Routes';\nimport jwt from 'jsonwebtoken';\nimport UserContext from './UserContext';\nimport useLocalStorage from './hooks/useLocalStorage';\n\n/**\n - App component (top of hierarchy) renders Nav and Routes components\n - declares state which will be passed down to child props (token, currentUser)\n\n Functions to be passed as props: \n --> signup() [passed to Routes --> SignUpForm component] \n --> login()  [passed to Routes --> LoginForm component]\n --> logout() [passed to Nav]\n\nUse useEffect to call the backend to get information on the newly-logged-in-user and stire it in currentUser state whenever the state of token changes. \n\n */\n\n// Key name for storing token in localStorage for \"remember me\" re-login\nexport const TOKEN_STORAGE_ID = 'jobly-token';\n\nfunction App() {\n\tconst [token, setToken] = useLocalStorage(null);\n\tconst [currentUser, setCurrentUser] = useState(null);\n\tconst [isLoading, setIsLoading] = useState(TOKEN_STORAGE_ID);\n\tconst [applicationIds, setApplicationIds] = useState(new Set([]));\n\t// utilized to save state for jobs the user has applied to. We use a Set because we don't want to duplicate job applications.\n\n\tconsole.log(\n\t\t'App',\n\t\t'isLoading=',\n\t\tisLoading,\n\t\t'currentUser=',\n\t\tcurrentUser,\n\t\t'token=',\n\t\ttoken\n\t);\n\n\tuseEffect(\n\t\tfunction loadInfo() {\n\t\t\tconsole.debug('App useEffect loadUserInfo', 'token=', token);\n\n\t\t\tasync function getCurrentUser() {\n\t\t\t\tif (token) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlet { username } = jwt.decode(token);\n\n\t\t\t\t\t\t// place token on API class so it ca be used to call the API\n\t\t\t\t\t\tJoblyApi.token = token;\n\t\t\t\t\t\tlet currentUser = await JoblyApi.getCurrentUser(username);\n\t\t\t\t\t\tsetCurrentUser(currentUser);\n\t\t\t\t\t\tsetApplicationIds(new Set(currentUser.applications));\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t\tconsole.error('App loadUserInfo: problem loading', err);\n\t\t\t\t\t\tsetCurrentUser(null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t\tsetIsLoading(true);\n\t\t\tgetCurrentUser();\n\t\t},\n\t\t[token]\n\t);\n\n\t// handles signup\n\tasync function signup(data) {\n\t\ttry {\n\t\t\tlet token = await JoblyApi.signup(data);\n\t\t\tsetToken(token);\n\t\t\treturn { success: true };\n\t\t} catch (err) {\n\t\t\tconsole.error('signup failed', err);\n\t\t\treturn { success: false, err };\n\t\t}\n\t}\n\n\t// handles login\n\tasync function login(data) {\n\t\ttry {\n\t\t\tlet token = await JoblyApi.login(data);\n\t\t\tsetToken(token);\n\t\t\treturn { success: true };\n\t\t} catch (err) {\n\t\t\tconsole.error('login failed', err);\n\t\t\treturn { success: false, err };\n\t\t}\n\t}\n\n\t// handles user logout\n\tasync function logout() {\n\t\tsetCurrentUser(null);\n\t\tsetToken(null);\n\t}\n\n\tif (isLoading) {\n\t\treturn <p>Loading &hellip;</p>;\n\t}\n\n\t// checks if a job has been applied to\n\t// looks through the Set to see if the job id is in it\n\tfunction hasAppliedToJob(id) {\n\t\treturn applicationIds.has(id);\n\t}\n\n\t// Apply to job: makes API call and updates the Set of application IDs\n\tfunction applyToJob(id) {\n\t\t// first checks if the job has alreeady been applied to\n\t\tif (hasAppliedToJob(id)) return;\n\n\t\t// if not, apply to job.\n\t\tJoblyApi.applyToJob(currentUser.username, id);\n\t\tsetApplicationIds(new Set([...applicationIds, id]));\n\t\t// creates new set with the current data and new job id\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<BrowserRouter>\n\t\t\t\t<UserContext.Provider\n\t\t\t\t\tvalue={{ currentUser, setCurrentUser, hasAppliedToJob, applyToJob }}\n\t\t\t\t>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Nav logout={logout} />\n\t\t\t\t\t\t<Routes login={login} signup={signup} />\n\t\t\t\t\t</div>\n\t\t\t\t</UserContext.Provider>\n\t\t\t</BrowserRouter>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}